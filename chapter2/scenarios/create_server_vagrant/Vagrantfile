# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

NUM_NODES = 2
START_IP_NUMBER = 5
IP_ADDRESS = "192.168.56"


Vagrant.configure("2") do |config|
  config.vm.box = "hashicorp-education/ubuntu-24-04"
  config.vm.provision "shell", run: "always", inline: "swapoff -a; sudo sysctl -w net.ipv4.ip_forward=1;"
  config.vm.provider "virtualbox" do |v|
    v.gui = false
  end
  config.vm.usable_port_range = 30000..32767
  config.vm.network "forwarded_port", guest: 30080, host: 30080, auto_correct: true

  config.vm.provision "shell", env: { "IP_NW" => IP_ADDRESS, "IP_START" => START_IP_NUMBER, "NUM_WORKER_NODES" => NUM_NODES }, inline: <<-SHELL
      echo "$IP_NW.$((IP_START)) control-plane" >> /etc/hosts
      for i in `seq 1 ${NUM_WORKER_NODES}`; do
        echo "$IP_NW.$((IP_START+i)) worker-${i}" >> /etc/hosts
      done
  SHELL


  (0..NUM_NODES).each do |i|
    if i == 0
      vm_name = "control-plane"
    else
      vm_name = "worker-#{i}"
    end
    config.vm.define vm_name do |plane|
      plane.vm.hostname = vm_name 

      $before_script = <<-SCRIPT
        echo # vagrant profile script > /etc/profile.d/vagrant.sh
        echo export CONTROL_PLANE_IP='#{IP_ADDRESS}.#{START_IP_NUMBER}' >> /etc/profile.d/vagrant.sh
        echo export MY_IP="#{IP_ADDRESS}.#{START_IP_NUMBER + i}" >> /etc/profile.d/vagrant.sh
        chmod +x /etc/profile.d/vagrant.sh
      SCRIPT

      plane.vm.network "private_network", ip: "#{IP_ADDRESS}.#{START_IP_NUMBER + i}", virtualbox__intnet: true
      plane.vm.provider "virtualbox" do |vb|
        vb.memory = "2048"
        vb.cpus = 2
        vb.customize ["modifyvm", :id, "--uartmode1", File::NULL]
        vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end
      plane.vm.provision "shell", inline: $before_script
      plane.vm.provision "shell", path: "install_kubeadm_crio_kubelet.sh" 
    end
  end
end